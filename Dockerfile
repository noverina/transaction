# Build stage
FROM maven:3.9.5-eclipse-temurin-21 AS build

WORKDIR /app

# Define build-time arguments
ARG SPRING_APPLICATION_NAME
ARG SERVER_PORT

ARG SPRING_DATASOURCE_URL
ARG SPRING_DATASOURCE_DRIVER_CLASS_NAME
ARG SPRING_JPA_DATABASE_PLATFORM

ARG JWT_SECRET
ARG JWT_EXPIRATION
ARG WHITELISTED_CLIENTS

ARG SPRINGDOC_SWAGGER_UI_AUTHORIZATION_BEARER_FORMAT
ARG SPRINGDOC_SWAGGER_UI_REQUEST_REDIRECT_ENABLED
ARG SPRINGDOC_SWAGGER_UI_PERSIST_AUTHORIZE

ARG HTTP_CONNECTION_READ_TIMEOUT
ARG HTTP_CONNECTION_CONNECT_TIMEOUT

ARG SPRING_KAFKA_BOOTSTRAP_SERVERS
ARG SPRING_KAFKA_CONSUMER_GROUP_ID
ARG SPRING_KAFKA_TOPIC_NAME
ARG SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET
ARG SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
ARG SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER

# Set environment variables for Maven filtering
ENV SPRING_APPLICATION_NAME=${SPRING_APPLICATION_NAME}
ENV SERVER_PORT=${SERVER_PORT}

ENV SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
ENV SPRING_DATASOURCE_DRIVER_CLASS_NAME=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
ENV SPRING_JPA_DATABASE_PLATFORM=${SPRING_JPA_DATABASE_PLATFORM}

ENV JWT_SECRET=${JWT_SECRET}
ENV JWT_EXPIRATION=${JWT_EXPIRATION}
ENV WHITELISTED_CLIENTS=${WHITELISTED_CLIENTS}

ENV SPRINGDOC_SWAGGER_UI_AUTHORIZATION_BEARER_FORMAT=${SPRINGDOC_SWAGGER_UI_AUTHORIZATION_BEARER_FORMAT}
ENV SPRINGDOC_SWAGGER_UI_REQUEST_REDIRECT_ENABLED=${SPRINGDOC_SWAGGER_UI_REQUEST_REDIRECT_ENABLED}
ENV SPRINGDOC_SWAGGER_UI_PERSIST_AUTHORIZE=${SPRINGDOC_SWAGGER_UI_PERSIST_AUTHORIZE}

ENV HTTP_CONNECTION_READ_TIMEOUT=${HTTP_CONNECTION_READ_TIMEOUT}
ENV HTTP_CONNECTION_CONNECT_TIMEOUT=${HTTP_CONNECTION_CONNECT_TIMEOUT}

ENV SPRING_KAFKA_BOOTSTRAP_SERVERS=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
ENV SPRING_KAFKA_CONSUMER_GROUP_ID=${SPRING_KAFKA_CONSUMER_GROUP_ID}
ENV SPRING_KAFKA_TOPIC_NAME=${SPRING_KAFKA_TOPIC_NAME}
ENV SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET}
ENV SPRING_KAFKA_PRODUCER_KEY_SERIALIZER=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER}
ENV SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER}

# Copy pom.xml and preload dependencies
COPY pom.xml .
RUN mvn dependency:go-offline

# Copy source and filtered resources
COPY src ./src
COPY config/application.properties ./src/main/resources/application.properties

# Run Maven with filtering enabled
RUN mvn clean package \
  -Dspring.application.name=${SPRING_APPLICATION_NAME} \
  -Dserver.port=${SERVER_PORT} \
  -Dspring.datasource.url=${SPRING_DATASOURCE_URL} \
  -Dspring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME} \
  -Dspring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM} \
  -Djwt.secret=${JWT_SECRET} \
  -Djwt.expiration=${JWT_EXPIRATION} \
  -Dwhitelisted-clients=${WHITELISTED_CLIENTS} \
  -Dspringdoc.swagger-ui.authorization-bearer-format=${SPRINGDOC_SWAGGER_UI_AUTHORIZATION_BEARER_FORMAT} \
  -Dspringdoc.swagger-ui.request-redirect-enabled=${SPRINGDOC_SWAGGER_UI_REQUEST_REDIRECT_ENABLED} \
  -Dspringdoc.swagger-ui.persist-authorize=${SPRINGDOC_SWAGGER_UI_PERSIST_AUTHORIZE} \
  -Dhttp.connection.read-timeout=${HTTP_CONNECTION_READ_TIMEOUT} \
  -Dhttp.connection.connect-timeout=${HTTP_CONNECTION_CONNECT_TIMEOUT} \
  -Dspring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS} \
  -Dspring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID} \
  -Dspring.kafka.topic-name=${SPRING_KAFKA_TOPIC_NAME} \
  -Dspring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET} \
  -Dspring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER} \
  -Dspring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER}